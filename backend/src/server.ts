import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import morgan from 'morgan';
import { DatabaseService } from './services/database';
import quizRoutes from './routes/quiz';
import adminRoutes from './routes/admin';

const app = express();
const PORT = process.env.PORT || 3001;

app.use(helmet());
app.use(cors());
app.use(morgan('combined'));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

const dbService = new DatabaseService();

app.get('/api/health', (req, res) => {
  res.json({ status: 'OK', message: 'Quiz API is running' });
});

app.use('/api/quiz', quizRoutes);
app.use('/api/admin', adminRoutes);

app.listen(PORT, async () => {
  console.log(`Server running on port ${PORT}`);
  await dbService.initialize();
  
  // Load quiz data with duplicate protection - TEMPORARILY DISABLED
  /*
  const { QuizService } = await import('./services/quiz');
  const quizService = new QuizService();
  
  try {
    const nutidsQuiz = {
      title: "Nutidsorientering ‚Äì √ñrnsk√∂ldsvik vecka 22",
      description: "Testa vad du vet om vad som h√§nt i √ñrnsk√∂ldsvik den senaste veckan!",
      questions: [
        {
          question_text: "I vilken stadsdel intr√§ffade branden d√§r en byggnad totalf√∂rst√∂rdes under veckan?",
          question_type: "multiple_choice" as const,
          options: ["Centrum", "Domsj√∂", "H√∂rnett", "Sj√§levad"],
          correct_answer: "Domsj√∂",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vilket fordon var inblandat i olyckan d√§r tv√• pojkar blev allvarligt skadade?",
          question_type: "multiple_choice" as const,
          options: ["Cykel", "Fyrhjuling", "Moped", "Bil"],
          correct_answer: "Fyrhjuling",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vilket djur drabbades av ett smittsamt virus i √ñ-vik enligt en artikel under veckan?",
          question_type: "multiple_choice" as const,
          options: ["Hund", "Katt", "Kanin", "H√§st"],
          correct_answer: "Katt",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vad handlade artikeln 'Det luktar s√• mycket svett' om?",
          question_type: "multiple_choice" as const,
          options: [
            "Att ventilationen i en skola var trasig",
            "Att eleverna hade idrottsdag",
            "Att det var varmt i klassrummet",
            "Att m√•nga elever gl√∂mde duscha efter idrotten"
          ],
          correct_answer: "Att m√•nga elever gl√∂mde duscha efter idrotten",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vad s√§ljer Adam till inv√•narna i √ñ-vik enligt en artikel under veckan?",
          question_type: "multiple_choice" as const,
          options: ["Glass", "Br√∂d", "Tidningar", "Blommor"],
          correct_answer: "Glass",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Det har varit flera br√§nder i √ñrnsk√∂ldsvik under veckan.",
          question_type: "true_false" as const,
          correct_answer: "true",
          time_limit: 20,
          points: 1
        }
      ]
    };
    
    if (!(await quizService.quizExistsByTitle(nutidsQuiz.title))) {
      await quizService.createQuiz(nutidsQuiz);
      console.log('‚úÖ Nutidsorientering √ñrnsk√∂ldsvik quiz loaded!');
    } else {
      console.log('‚ÑπÔ∏è Nutidsorientering √ñrnsk√∂ldsvik quiz already exists - skipping');
    }
    
    // Load G√§vle quiz
    const gavleQuiz = {
      title: "Nutidsorientering ‚Äì G√§vle vecka 22",
      description: "Testa vad du vet om vad som h√§nt i G√§vle den senaste veckan!",
      questions: [
        {
          question_text: "Vad handlade r√§kningen p√• 16 000 kronor om som kom som en chock f√∂r en person i G√§vle?",
          question_type: "multiple_choice" as const,
          options: [
            "En elr√§kning",
            "En vattenl√§cka", 
            "En mobiltelefon",
            "En parkeringsbot"
          ],
          correct_answer: "En elr√§kning",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vad h√§nde p√• en uteservering p√• R√•dhustorget i veckan?",
          question_type: "multiple_choice" as const,
          options: [
            "Det √∂ppnade en ny glasskiosk",
            "Det blev en brand",
            "Det h√∂lls en konsert",
            "Det var en fotbollsmatch"
          ],
          correct_answer: "Det blev en brand",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vilket fordon sj√∂nk utanf√∂r Pite√•, men kom fr√•n G√§vle?",
          question_type: "multiple_choice" as const,
          options: [
            "En segelb√•t",
            "En bogserb√•t",
            "En fiskeb√•t", 
            "En f√§rja"
          ],
          correct_answer: "En bogserb√•t",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vad blev bowlinghallen i G√§vle omgjord till under veckan?",
          question_type: "multiple_choice" as const,
          options: [
            "En biograf",
            "En restaurang",
            "Ett bibliotek",
            "En skola"
          ],
          correct_answer: "En restaurang",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Vad var det f√∂r speciell idrottst√§vling som h√∂lls i G√§vle under veckan?",
          question_type: "multiple_choice" as const,
          options: [
            "GD/GIF-olympiaden",
            "G√§vle maraton",
            "Stadsfesten",
            "Bryn√§s Cup"
          ],
          correct_answer: "GD/GIF-olympiaden",
          time_limit: 30,
          points: 1
        },
        {
          question_text: "Det har varit flera br√§nder i G√§vle under veckan.",
          question_type: "true_false" as const,
          correct_answer: "true",
          time_limit: 20,
          points: 1
        }
      ]
    };
    
    if (!(await quizService.quizExistsByTitle(gavleQuiz.title))) {
      await quizService.createQuiz(gavleQuiz);
      console.log('‚úÖ Nutidsorientering G√§vle quiz loaded!');
    } else {
      console.log('‚ÑπÔ∏è Nutidsorientering G√§vle quiz already exists - skipping');
    }
    
    console.log('üöÄ Server ready with quiz data!');
  } catch (error) {
    console.log('‚ùå Error loading quiz:', error);
    console.log('üöÄ Server ready without quiz data');
  }
  */
  
  console.log('üöÄ Server ready - clean database!');
});